
import forcomp.Anagrams._

object test {


 val w = "badca"
  val x = w.sortBy( x => x)
  val ls = w groupBy(c => c) toList
  
  ls map {case (x,y) => (x,y.length)}

  
  wordOccurrences(w)
  
  wordOccurrences("abcd") == List(('a', 1), ('b', 1), ('c', 1), ('d', 1))
   wordOccurrences("Robert") == List(('b', 1), ('e', 1), ('o', 1), ('r', 2), ('t', 1))
  val zs = List("AA","BB","CC")
  zs.foldRight("")((x,y) => x + y)
  
  "A" + "B"
  
  val y =  dictionary.map( x => (wordOccurrences(x),x))
 val z = y.groupBy( x => x._1)
   z.values
}