package week5

object listfun {
 val nums = List(2,-4,5,7,1)                      //> nums  : List[Int] = List(2, -4, 5, 7, 1)
   
  val fruits = List("apple","pineapple","orange","banna")
                                                  //> fruits  : List[String] = List(apple, pineapple, orange, banna)
   def squareList(xs:List[Int]): List[Int] = xs match {
   case Nil => Nil
   case y :: ys => (y*y) :: squareList(ys)
   }                                              //> squareList: (xs: List[Int])List[Int]
   squareList(nums)                               //> res0: List[Int] = List(4, 16, 25, 49, 1)
   
   def squareList2(xs:List[Int]): List[Int] =
   xs map (x => x *x)                             //> squareList2: (xs: List[Int])List[Int]
   
   squareList2(nums)                              //> res1: List[Int] = List(4, 16, 25, 49, 1)
 
 nums filter ( x => x >0)                         //> res2: List[Int] = List(2, 5, 7, 1)
 nums filterNot ( x => x >0)                      //> res3: List[Int] = List(-4)
 
 num partition(x => x >0)  
}