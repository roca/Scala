
import forcomp.Anagrams._

object test {
val sentence = List("Yesman")                     //> sentence  : List[String] = List(Yesman)
val occurrences = sentenceOccurrences(sentence)   //> occurrences  : forcomp.Anagrams.Occurrences = List((a,1), (e,1), (m,1), (n,1
                                                  //| ), (s,1), (y,1))
val combin = combinations(occurrences)            //> combin  : List[forcomp.Anagrams.Occurrences] = List(List((a,1)), List((e,1))
                                                  //| , List((m,1)), List((n,1)), List((s,1)), List((y,1)), List((a,1), (e,1)), Li
                                                  //| st((a,1), (m,1)), List((a,1), (n,1)), List((a,1), (s,1)), List((a,1), (y,1))
                                                  //| , List((e,1), (m,1)), List((e,1), (n,1)), List((e,1), (s,1)), List((e,1), (y
                                                  //| ,1)), List((m,1), (n,1)), List((m,1), (s,1)), List((m,1), (y,1)), List((n,1)
                                                  //| , (s,1)), List((n,1), (y,1)), List((s,1), (y,1)), List((a,1), (e,1), (m,1)),
                                                  //|  List((a,1), (e,1), (n,1)), List((a,1), (e,1), (s,1)), List((a,1), (e,1), (y
                                                  //| ,1)), List((a,1), (m,1), (n,1)), List((a,1), (m,1), (s,1)), List((a,1), (m,1
                                                  //| ), (y,1)), List((a,1), (n,1), (s,1)), List((a,1), (n,1), (y,1)), List((a,1),
                                                  //|  (s,1), (y,1)), List((e,1), (m,1), (n,1)), List((e,1), (m,1), (s,1)), List((
                                                  //| e,1), (m,1), (y,1)), List((e,1), (n,1), (s,1)), List((e,1), (n,1), (y,1)), L
                                                  //| ist((e,1), (s,1), (y,1)), List((m,1), (n,1), (s,1)), List((m,1), (n,1), (y,1
                                                  //| )), List((m,1), (s,1), (
                                                  //| Output exceeds cutoff limit.

 sentenceAnagrams(sentence).filter( x => x.length > 0) //> res0: List[forcomp.Anagrams.Sentence] = List(List(), List(), List(), List(),
                                                  //|  List(), List(seamy), List(), List(manes, means, names), List(), List(), Lis
                                                  //| t(), List(), List(mens), List(), List(), List(many), List(Mans), List(ayes, 
                                                  //| easy, yeas), List(), List(sane, Sean), List(), List(Ames, same, seam), List(
                                                  //| amen, mane, mean, name), List(), List(), List(), List(), List(yes), List(), 
                                                  //| List(), List(), List(), List(men), List(say), List(any, nay), List(San), Lis
                                                  //| t(Amy, May), List(Sam), List(man), List(aye, yea), List(sea), List(), List(M
                                                  //| ae), List(), List(), List(), List(my), List(), List(), List(), List(), List(
                                                  //| en), List(em, me), List(), List(as), List(an), List(am), List(), List(), Lis
                                                  //| t(), List(), List(), List(), List())

}