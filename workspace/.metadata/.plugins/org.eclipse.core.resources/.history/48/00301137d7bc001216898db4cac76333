package streams

import common._
import streams._

trait Level1 extends GameDef with Solver with StringParserTerrain {
      /* terrain for level 1*/

    val level =
    """ooo-------
      |oSoooo----
      |ooooooooo-
      |-ooooooooo
      |-----ooToo
      |------ooo-""".stripMargin

   
  }

object scratch extends Level1{

terrain(Pos(3,1))                                 //> res0: Boolean = true



val n  = neighborsWithHistory(Block(Pos(1,1),Pos(1,1)), List(Left,Up))
                                                  //> n  : Stream[(streams.scratch.Block, List[streams.scratch.Move])] = Stream((B
                                                  //| lock(Pos(1,2),Pos(1,3)),List(Right, Left, Up)), ?)
    
  
}